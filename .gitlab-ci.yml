# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy
  - test

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  rules:
    # The following prevents the pipeline from running except when run
    # manually via the GitLab web interface.
    - when: manual
  script:
    - echo "Building application..."

    # The following line is only necessary because the project is under this subdirectory.
    # - cd discussion-board

    - cd ui
    - docker build -t ui .
    - cd ..
    - cd server
    - docker build -t server .
    - cd ..

deploy-job:      # This job runs in the deploy stage.
  stage: deploy
  rules:
    # The following prevents the pipeline from running except when run
    # manually via the GitLab web interface.
    - when: manual
  script:
    - echo "Deploying application..."

    # The following line is only necessary because the project is under this subdirectory.
    # - cd discussion-board/

    - docker compose -f compose.yaml up -d --build

e2e-test-job:   # This job runs in the test stage.
  stage: test 
  rules:
    # The following prevents the pipeline from running except when run
    # manually via the GitLab web interface.
    - when: manual
  script:
    - echo "Running E2E tests..."

    # The following line is only necessary because the project is under this subdirectory.
    - docker exec -T discussion-board-e2e-1 xvfb-run npx playwright test
